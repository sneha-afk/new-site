@use "variables" as *;
@use "sass:color";

// Pill mixin for buttons, tags, post cards
@mixin pill(
  $background: $background-secondary,
  $hover-background: $hover-bg,
  $font-size: $font-size-sm,
  $color: $text-color,
  $hover-color: $hover-text,
  $padding-x: $spacing-md,
  $padding-y: $spacing-xs,
  $gap: $spacing-xs,
  $align: center,
  $justify: center
) {
  display: inline-flex;
  align-items: $align;
  justify-content: $justify;
  gap: $gap;
  padding: $padding-y $padding-x;
  border-radius: 9999px;
  font-family: $font-primary;
  font-size: $font-size;
  font-weight: $font-weight-medium;
  color: $color;
  background: $background;
  text-decoration: none;
  cursor: pointer;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
  transition: all 0.2s ease-in-out;

  &:hover {
    background: $hover-background;
    color: $hover-color;
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
  }

  &:focus {
    outline: 2px solid rgba($primary-color, 0.3);
  }
}

// Checkbox styling mixin
@mixin custom-checkbox(
  $size: $checkbox-size,
  $border-radius: $checkbox-border-radius,
  $check-size: $checkbox-check-size
) {
  appearance: none;
  width: $size;
  height: $size;
  border: 2px solid $gray-400;
  border-radius: $border-radius;
  background-color: $background-secondary;
  cursor: pointer;
  position: relative;
  transition: all 0.2s ease;

  &:checked {
    background-color: $color-green-primary;
    border-color: $color-green-primary;

    &::after {
      content: "âœ”";
      font-size: $check-size;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }

  &:focus {
    outline: 2px solid $color-green-primary;
    outline-offset: 2px;
  }
}

// Blockquote variant mixin
@mixin blockquote-variant(
  $border-color,
  $background-color,
  $icon-content,
  $icon-color
) {
  border-left-color: $border-color;
  background-color: $background-color;

  &::before {
    content: $icon-content;
    color: $icon-color;
  }
}

// Responsive mixin
@mixin respond-to($breakpoint) {
  @if $breakpoint == mobile {
    @media (max-width: $mobile-breakpoint) {
      @content;
    }
  } @else if $breakpoint == tablet {
    @media (max-width: $tablet-breakpoint) {
      @content;
    }
  } @else if $breakpoint == desktop {
    @media (min-width: $desktop-breakpoint) {
      @content;
    }
  } @else if $breakpoint == widescreen {
    @media (min-width: $widescreen-breakpoint) {
      @content;
    }
  }
}

// Grid layout mixin
@mixin grid-layout($columns, $gap: $spacing-sm) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Card mixin for 3D elevated elements
@mixin card(
  $background: $background-secondary,
  $border-color: rgba($primary-color, 0.2),
  $elevation: 1,
  $border-radius: $spacing-sm,
  $border-left: 3px solid $primary-color
) {
  background: $background;
  border-radius: $border-radius;
  border-left: $border-left;
  transition: all 0.3s ease;

  @if $elevation == 1 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  } @else if $elevation == 2 {
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  } @else if $elevation == 3 {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  } @else if $elevation == 4 {
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  } @else if $elevation == 5 {
    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);
  }

  &:hover {
    @if $elevation == 1 {
      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
    } @else if $elevation == 2 {
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
    }
    transform: translateY(-2px);
  }
}

// Text contrast utilities
@mixin high-contrast-text {
  color: $text-color;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

@mixin subtle-glow($color: $primary-color) {
  box-shadow: 0 0 10px rgba($color, 0.3);
}

// Gradient background generator
@mixin gradient-background(
  $angle: 135deg,
  $color1: $primary-color,
  $color2: $secondary-color
) {
  background: linear-gradient($angle, $color1, $color2);
}
